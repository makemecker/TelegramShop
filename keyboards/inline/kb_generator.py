from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

BUTTONS: dict[str, str] = {
    'catalog': 'üõçÔ∏è –í –∫–∞—Ç–∞–ª–æ–≥',
    'cart': 'üõí –í –∫–æ—Ä–∑–∏–Ω—É',
    'status': 'üöö –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞',
    'menu': '–í –º–µ–Ω—é üç™',
    'order': 'üì¶ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑',
    'all_right': '‚úÖ –í—Å–µ –≤–µ—Ä–Ω–æ',
    'back': 'üëà –ù–∞–∑–∞–¥',
    'confirm': '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑'
    }


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ –ª–µ—Ç—É
def create_inline_kb(*args: str,
                     **kwargs: str) -> InlineKeyboardMarkup:
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∏–ª–¥–µ—Ä
    kb_builder: InlineKeyboardBuilder = InlineKeyboardBuilder()
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    buttons: list[InlineKeyboardButton] = []

    # –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–∫–∞–º–∏ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ args –∏ kwargs
    if args:
        for button in args:
            buttons.append(InlineKeyboardButton(
                text=BUTTONS[button] if button in BUTTONS else button,
                callback_data=button))
    if kwargs:
        for button, text in kwargs.items():
            buttons.append(InlineKeyboardButton(
                text=text,
                callback_data=button))

    # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –±–∏–ª–¥–µ—Ä –º–µ—Ç–æ–¥–æ–º row c –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º width
    kb_builder.row(*buttons, width=1)

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    return kb_builder.as_markup()
